name: server deploy

on:
  push:
    branches: ['master']

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Gradle 캐싱
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: make application-database.properties
        run: |
          cd ./src/main/resources
          touch ./application-database.properties
          echo "${{ secrets.DATABASE }}" >> ./application-database.properties
        shell: bash

      - name: Gradle Permission
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew bootJar

      - name: Create zip file
        run: |
          mkdir deploy
          cp ./docker/docker-compose.blue.yml ./deploy/
          cp ./docker/docker-compose.green.yml ./deploy/
          cp ./appspec.yml ./deploy/
          cp ./docker/Dockerfile ./deploy/
          cp ./scripts/*.sh ./deploy/
          cp ./build/libs/*.jar ./deploy/
          zip -r -qq -j ./spring-build.zip ./deploy

      - name: Connect AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload on S3
        run: |
          aws s3 cp \
          --region ap-northeast-2 \
          ./spring-build.zip s3://spring-onedelivery-awsbucket

      - name: Request deploy on Code Deploy
        run: aws deploy create-deployment --application-name backend-deploy-group
          --deployment-config-name CodeDeployDefault.OneAtATime
          --deployment-group-name backend-deploy-group
          --s3-location bucket=backend-rex-bucket,bundleType=zip,key=spring-build.zip